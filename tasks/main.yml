---
# tasks/main.yml

- name: Déterminer les variables spécifiques à la distribution
  include_vars: "{{ ansible_os_family }}.yml"

- name: Mise à jour du cache des paquets (Debian)
  apt:
    update_cache: yes
  become: yes
  when: ansible_os_family == "Debian"

- name: Mise à jour du cache des paquets (RedHat)
  dnf:
    update_cache: yes
  become: yes
  when: ansible_os_family == "RedHat"

- name: Installation des paquets nécessaires (Debian)
  apt:
    name: "{{ packages }}"
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Installation des paquets nécessaires (RedHat)
  dnf:
    name: "{{ packages }}"
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Installer PyMySQL (RedHat)
  pip:
    name: PyMySQL
    executable: pip3
  become: yes
  when: ansible_os_family == "RedHat"

- name: Supprimer la page par défaut d'Apache
  file:
    path: "{{ apache_document_root }}/index.html"
    state: absent
  become: yes

- name: Désactiver le site Apache par défaut (Debian)
  command: a2dissite 000-default.conf
  become: yes
  when: ansible_os_family == "Debian"
  notify: restart apache

- name: Démarrer Apache (Debian sans systemd)
  command: /etc/init.d/apache2 start
  become: yes
  when: ansible_os_family == "Debian"

- name: Activer Apache au démarrage (Debian)
  command: update-rc.d apache2 defaults
  become: yes
  when: ansible_os_family == "Debian"

- name: Démarrer httpd (RedHat sans systemd)
  command: apachectl -k start
  become: yes
  when: ansible_os_family == "RedHat"

- name: Activer httpd au démarrage (RedHat, si chkconfig dispo)
  command: chkconfig httpd on
  become: yes
  when: ansible_os_family == "RedHat"
  ignore_errors: yes

- name: Supprimer la base de données test
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  become: yes

- name: Créer la base de données WordPress
  community.mysql.mysql_db:
    name: "{{ wordpress_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  become: yes

- name: Créer l'utilisateur WordPress
  community.mysql.mysql_user:
    name: "{{ wordpress_db_user }}"
    password: "{{ wordpress_db_password }}"
    priv: "{{ wordpress_db_name }}.*:ALL"
    host: "{{ wordpress_db_host }}"
    state: present
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  become: yes

- name: Télécharger WordPress
  get_url:
    url: "{{ wordpress_download_url }}"
    dest: "{{ wordpress_temp_dir }}/latest.zip"
    mode: '0644'
  become: yes

- name: Déployer WordPress dans le DocumentRoot
  unarchive:
    src: "{{ wordpress_temp_dir }}/latest.zip"
    dest: "{{ apache_document_root }}/"
    remote_src: yes
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  become: yes

- name: Définir les permissions sur les fichiers WordPress
  file:
    path: "{{ apache_document_root }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ wordpress_dir_mode }}"
    recurse: yes
  become: yes

- name: Créer le fichier wp-config.php
  template:
    src: wp-config.php.j2
    dest: "{{ apache_document_root }}/wp-config.php"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: '0640'
  become: yes

- name: Configurer Apache pour WordPress (Debian)
  template:
    src: wordpress.j2
    dest: "{{ apache_sites_available }}/wordpress.conf"
    backup: yes
  become: yes
  when: ansible_os_family == "Debian"
  notify:
    - enable wordpress site

- name: Configurer Apache pour WordPress (RedHat)
  template:
    src: wordpress.j2
    dest: "{{ apache_sites_available }}/wordpress.conf"
    backup: yes
  become: yes
  when: ansible_os_family == "RedHat"
  notify:
    - enable wordpress site

- name: Activer le module rewrite (Debian)
  apache2_module:
    name: rewrite
    state: present
  become: yes
  when: ansible_os_family == "Debian"
  notify:
    - restart apache

- name: Nettoyer les fichiers temporaires
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ wordpress_temp_dir }}/latest.zip"
    - "{{ wordpress_temp_dir }}/wordpress"
  become: yes
